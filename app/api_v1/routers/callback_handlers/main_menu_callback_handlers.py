import datetime
from aiogram import Router, F
from aiogram.utils import markdown
from aiogram.types import CallbackQuery

from app.api_v1.orm.crud import AsyncOrm

from app.api_v1.markups import (
    MenuActions,
    MenuCbData,
    ProfileActions,
    ProfileCbData,
    PayActions,
    PaymentCbData,
    build_account_kb,
    root_kb,
    build_main_kb,
    product_details_kb,
)

from app.api_v1.utils import (
    payment_manager,
    get_receipt,
    generate_order_number,
    LEXICON_RU,
    check_payment,
    get_user_info,
)


router = Router(name=__name__)


@router.callback_query(MenuCbData.filter(F.action == MenuActions.account))
async def handle_account_button(call: CallbackQuery):
    await call.answer()
    user = await AsyncOrm.get_user(
        tg_id=call.from_user.id,
    )

    user_info = get_user_info(user)

    await call.message.edit_caption(
        caption=(
            f"<b>–õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç</b>\n\n"
            f"üÜî {user.tg_id} \n"
            f"üóì –ü–æ–¥–ø–∏—Å–∫–∞: {user_info['sub_info']}\n\n"
            f"üéÅ <b>–°–∫–∏–¥–∫–∞:</b> {user_info['discount']}\n\n"
            f"<i>–î–ª—è –æ–ø–ª–∞—Ç—ã –∏ –ø—Ä–æ–¥–ª–µ–Ω–∏—è VPN –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –±–∞–ª–∞–Ω—Å.\n</i>"
            f"<i>–î–ª—è –µ–≥–æ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–ª–∞–≤–∏—à–∏ –Ω–∏–∂–µ</i>"
        ),
        reply_markup=build_account_kb(user=user),
    )


@router.callback_query(MenuCbData.filter(F.action == MenuActions.support))
async def handle_support_button(call: CallbackQuery):
    await call.answer()

    await call.message.edit_caption(
        caption=LEXICON_RU["help_info"],
        reply_markup=root_kb(),
    )


@router.callback_query(MenuCbData.filter(F.action == MenuActions.promo))
async def handle_promo_button(call: CallbackQuery):
    await call.answer()

    await call.message.edit_caption(
        caption="–í–≤–µ–¥–∏—Ç–µ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –ø—Ä–æ–º–æ–∫–æ–¥ –Ω–∞ –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π 7-–¥–Ω–µ–≤–Ω—ã–π —Ç—Ä–∏–∞–ª üéÅ",
        reply_markup=root_kb(),
    )


@router.callback_query(PaymentCbData.filter(F.action == PayActions.pay))
async def handle_pay_action_button(
    call: CallbackQuery,
):

    await call.answer()
    msg_text = markdown.text(
        markdown.hbold("–°—É–º–º–∞: 150 —Ä—É–±"),
        markdown.hitalic("–î–ª—è –æ–ø–ª–∞—Ç—ã –ø–µ—Ä–µ–π–¥–∏—Ç–µ –ø–æ —Å—Å—ã–ª–∫–µ –Ω–∏–∂–µ"),
        sep="\n\n",
    )
    payment = await payment_manager.init_payment(
        amount=15000,
        order_id=generate_order_number(),
        description=f"–û–ø–ª–∞—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ‚Ññ{call.from_user.id}",
        receipt=get_receipt(price=150),
    )
    is_payment = check_payment(payment)
    await call.message.edit_caption(
        caption=msg_text,
        reply_markup=product_details_kb(
            payment_cb_data=payment,
            from_main_menu=True,
            success=True if is_payment else False,
        ),
    )


@router.callback_query(MenuCbData.filter(F.action == MenuActions.advantage))
async def handle_advantage_button(call: CallbackQuery):
    await call.answer()

    await call.message.edit_caption(
        caption=LEXICON_RU["advantage"],
        reply_markup=root_kb(),
    )


@router.callback_query(
    ProfileCbData.filter(
        F.action == ProfileActions.back_to_main,
    )
)
async def handle_back_button(call: CallbackQuery):
    await call.answer()

    await call.message.edit_caption(
        caption=markdown.hbold(
            "üöÄ  –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –≤ 1 –∫–ª–∏–∫, –±–µ–∑ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π —Å–∫–æ—Ä–æ—Å—Ç–∏\n\n"
            "üõ°  –û—Ç—Å—É—Ç—Å—Ç–≤–∏–µ —Ä–µ–∫–ª–∞–º—ã –∏ –ø–æ–ª–Ω–∞—è –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—å\n\n"
            "üî•  –¢–≤–æ–π –ª–∏—á–Ω—ã–π VPN –ø–æ —Å–∞–º–æ–π –Ω–∏–∑–∫–æ–π —Ü–µ–Ω–µ\n\n"
            "üí∞  –¶–µ–Ω–∞: 1Ã∂9Ã∂9Ã∂—Ä—É–± üí•129 —Ä—É–±/–º–µ—Å",
        ),
        reply_markup=build_main_kb(),
    )
