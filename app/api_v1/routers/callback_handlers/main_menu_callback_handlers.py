from aiogram import Router, F
from aiogram.utils import markdown
from aiogram.types import CallbackQuery
from app.api_v1.core.crud import AsyncOrm

from app.api_v1.markups import (
    MenuActions,
    MenuCbData,
    ProfileActions,
    AccountCbData,
    PayActions,
    PaymentCbData,
)
from app.api_v1.markups import (
    build_account_kb,
    root_kb,
    build_main_kb,
    build_pay_button,
)
from app.api_v1.utils.lexicon import LEXICON_RU


router = Router(name=__name__)


@router.callback_query(MenuCbData.filter(F.action == MenuActions.account))
async def handle_account_button(call: CallbackQuery):
    await call.answer()
    user = await AsyncOrm.get_user(
        tg_id=call.from_user.id,
        username=call.from_user.username,
    )

    await call.message.edit_text(
        text=(
            f"<b>–õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç</b>\n\n"
            f"üÜî {user.tg_id} \n"
            f"üí∞ –ë–∞–ª–∞–Ω—Å: {user.balance}—Ä—É–±\n\n"
            f"<i>–î–ª—è –æ–ø–ª–∞—Ç—ã –∏ –ø—Ä–æ–¥–ª–µ–Ω–∏—è VPN –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –±–∞–ª–∞–Ω—Å.\n</i>"
            f"<i>–î–ª—è –µ–≥–æ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–ª–∞–≤–∏—à–∏ –Ω–∏–∂–µ</i>"
        ),
        reply_markup=build_account_kb(),
    )


@router.callback_query(MenuCbData.filter(F.action == MenuActions.support))
async def handle_support_button(call: CallbackQuery):
    await call.answer()

    await call.message.edit_text(
        text=LEXICON_RU["help_info"],
        reply_markup=root_kb(),
    )


@router.callback_query(PaymentCbData.filter(F.action == PayActions.pay))
async def handle_pay_button(call: CallbackQuery):
    await call.answer()

    await call.message.edit_text(
        text="–î–ª—è –æ–ø–ª–∞—Ç—ã VPN –ø–µ—Ä–µ–π–¥–∏—Ç–µ –ø–æ —Å—Å—ã–ª–∫–µ:",
        reply_markup=build_pay_button(
            tg_id=call.from_user.id,
        ),
    )


@router.callback_query(MenuCbData.filter(F.action == MenuActions.advantage))
async def handle_advantage_button(call: CallbackQuery):
    await call.answer()

    await call.message.edit_text(
        text="–ü–æ—á–µ–º—É –º—ã?",
        reply_markup=root_kb(),
    )


@router.callback_query(AccountCbData.filter(F.action == ProfileActions.back))
async def handle_root_button(call: CallbackQuery):
    await call.answer()

    await call.message.edit_text(
        text=markdown.hbold(
            "üöÄ  –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –≤ 1 –∫–ª–∏–∫, –±–µ–∑ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π —Å–∫–æ—Ä–æ—Å—Ç–∏\n\n"
            "üõ°  –û—Ç—Å—É—Ç—Å—Ç–≤–∏–µ —Ä–µ–∫–ª–∞–º—ã –∏ –ø–æ–ª–Ω–∞—è –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—å\n\n"
            "üî•  –¢–≤–æ–π –ª–∏—á–Ω—ã–π VPN –ø–æ —Å–∞–º–æ–π –Ω–∏–∑–∫–æ–π —Ü–µ–Ω–µ\n\n"
            "üí∞  –¶–µ–Ω–∞: 1Ã∂9Ã∂9Ã∂—Ä—É–± üí•129 —Ä—É–±/–º–µ—Å",
        ),
        reply_markup=build_main_kb(),
    )
