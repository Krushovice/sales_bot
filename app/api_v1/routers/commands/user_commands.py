from datetime import datetime, timedelta
from aiogram import Router, F
from aiogram.types import Message, FSInputFile


from app.api_v1.markups import build_main_kb, root_kb

from app.api_v1.orm import AsyncOrm, Key

from app.api_v1.utils import outline_helper


router = Router(name=__name__)

file_path = "app/api_v1/utils/images/image2.jpg"


@router.message(F.text == "REALVPN2024CPG")
async def user_promo_handler(message: Message) -> None:
    tg_id = message.from_user.id
    today = datetime.now()
    delta = timedelta(days=7)
    expiration_date = (today + delta).strftime("%d-%m-%Y")
    user = await AsyncOrm.get_user(tg_id=tg_id)
    if not user:
        user = await AsyncOrm.create_user(
            tg_id=tg_id,
            username=message.from_user.username,
        )
    if not user.key:
        key = outline_helper.create_new_key(name=tg_id)
        await AsyncOrm.update_user(
            tg_id=tg_id,
            subscription=True,
            subscribe_date=today.strftime("%d-%m-%Y"),
            expiration_date=expiration_date,
            key=Key(
                api_id=int(key.key_id),
                name=key.name,
                user_id=user.id,
                value=key.access_url,
            ),
        )

        await message.answer_photo(
            photo=FSInputFile(
                path=file_path,
            ),
            caption=(
                "–í–æ—Ç –≤–∞—à –ø—Ä–æ–±–Ω—ã–π –∫–ª—é—á \n"
                f"<pre>{key.access_url}</pre>"
                "üëÜ–ù–∞–∂–º–∏—Ç–µ —á—Ç–æ–±—ã —Å–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å\n"
                "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–µ —Å–∫–∞—á–∏–≤–∞–π—Ç–µ —Ç–æ—Ä—Ä–µ–Ω—Ç-—Ñ–∞–π–ª—ã —á–µ—Ä–µ–∑ –Ω–∞—à VPN.‚ÄºÔ∏è "
                "–°–µ—Ä–≤–µ—Ä Outline –º–æ–∂–µ—Ç –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –Ω–∞—à —Å–µ—Ä–≤–∏—Å –∑–∞ —ç—Ç–æ. "
                "C–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à–µ –ø–æ–Ω–∏–º–∞–Ω–∏–µ –∏ –∑–∞ —Ç–æ, —á—Ç–æ –≤—ã–±—Ä–∞–ª–∏ –Ω–∞—Åü´∂üèª"
            ),
            reply_markup=root_kb(),
        )

    else:
        expiration_date = user.expiration_date
        await message.answer_photo(
            photo=FSInputFile(
                path=file_path,
            ),
            caption=(
                f"–ü—Ä–æ–º–æ–∫–æ–¥ –¥–µ–π—Å—Ç–≤—É–µ—Ç —Ç–æ–ª—å–∫–æ –¥–ª—è –Ω–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π \n\n"
                f"–í–∞—à–∞ –ø–æ–¥–ø–∏—Å–∫–∞ –∑–∞–∫–æ–Ω—á–∏–ª–∞—Å—å {expiration_date}"
            ),
            reply_markup=root_kb(),
        )


@router.message()
async def any_text_handler(message: Message) -> None:

    await message.answer_photo(
        photo=FSInputFile(
            path=file_path,
        ),
        caption="–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –º–µ–Ω—é –¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–π —Ä–∞–±–æ—Ç—ã",
        reply_markup=build_main_kb(),
    ),
