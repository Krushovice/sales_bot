from aiogram import Router, F
from aiogram.types import CallbackQuery


from app.api_v1.orm.crud import AsyncOrm

from app.api_v1.markups import (
    ProfileActions,
    ProfileCbData,
    build_payment_kb,
)

from app.api_v1.utils import (
    LEXICON_RU,
    setup_logger,
    check_time_delta,
)

router = Router(name=__name__)

logger = setup_logger(__name__)


@router.callback_query(ProfileCbData.filter(F.action == ProfileActions.refill))
async def handle_payment_button(call: CallbackQuery):
    await call.answer()
    try:

        user = await AsyncOrm.get_user(
            tg_id=call.from_user.id,
        )
        subscribe = user.expiration_date
        if check_time_delta(subscribe):
            sub_info = str(subscribe)
        else:
            sub_info = "–ù–µ –∞–∫—Ç–∏–≤–Ω–∞"

        await call.message.edit_caption(
            caption=(
                f"–í–∞—à–∞ –ø–æ–¥–ø–∏—Å–∫–∞: <i>{sub_info}</i>üóì\n\n"
                f"–ö–æ–≥–¥–∞ –≤–∞—à —Ä–µ—Ñ–µ—Ä–∞–ª –æ–ø–ª–∞—á–∏–≤–∞–µ—Ç –ø–æ–¥–ø–∏—Å–∫—É, –≤—ã –ø–æ–ª—É—á–∞–µ—Ç–µ –±–æ–Ω—É—Å–Ω—ã–µ –¥–Ω–∏. "
                f"–ü–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏ —Ç—É—Ç /partners.\n"
                f"–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—Ä–∏–∞–Ω—Ç –ø—Ä–æ–¥–ª–µ–Ω–∏—è –ø–æ–¥–ø–∏—Å–∫–∏: ‚¨áÔ∏è"
            ),
            reply_markup=build_payment_kb(),
        )
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–µ—Ö–æ–¥–∞ –∫ –≤–∞—Ä–∏–∞–Ω—Ç–∞–º –æ–ø–ª–∞—Ç—ã: {e}")


@router.callback_query(
    ProfileCbData.filter(F.action == ProfileActions.renewal),
)
async def handle_renewal_button(call: CallbackQuery):
    await call.answer()
    try:
        await call.message.edit_caption(
            caption="üí∞ –í–∞—Ä–∏–∞–Ω—Ç—ã –æ–ø–ª–∞—Ç—ã –ø–æ–¥–ø–∏—Å–∫–∏: ‚¨áÔ∏è",
            reply_markup=build_payment_kb(discount=True),
        )
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø–µ—Ä–µ—Ö–æ–¥–∞ –∫ –æ–ø–ª–∞—Ç–µ: {e}")
